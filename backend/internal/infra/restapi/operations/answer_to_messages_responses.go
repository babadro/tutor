// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/babadro/tutor/internal/models/swagger"
)

// AnswerToMessagesOKCode is the HTTP code returned for type AnswerToMessagesOK
const AnswerToMessagesOKCode int = 200

/*
AnswerToMessagesOK Successful response

swagger:response answerToMessagesOK
*/
type AnswerToMessagesOK struct {

	/*
	  In: Body
	*/
	Payload *AnswerToMessagesOKBody `json:"body,omitempty"`
}

// NewAnswerToMessagesOK creates AnswerToMessagesOK with default headers values
func NewAnswerToMessagesOK() *AnswerToMessagesOK {

	return &AnswerToMessagesOK{}
}

// WithPayload adds the payload to the answer to messages o k response
func (o *AnswerToMessagesOK) WithPayload(payload *AnswerToMessagesOKBody) *AnswerToMessagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the answer to messages o k response
func (o *AnswerToMessagesOK) SetPayload(payload *AnswerToMessagesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AnswerToMessagesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AnswerToMessagesBadRequestCode is the HTTP code returned for type AnswerToMessagesBadRequest
const AnswerToMessagesBadRequestCode int = 400

/*
AnswerToMessagesBadRequest Bad request

swagger:response answerToMessagesBadRequest
*/
type AnswerToMessagesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewAnswerToMessagesBadRequest creates AnswerToMessagesBadRequest with default headers values
func NewAnswerToMessagesBadRequest() *AnswerToMessagesBadRequest {

	return &AnswerToMessagesBadRequest{}
}

// WithPayload adds the payload to the answer to messages bad request response
func (o *AnswerToMessagesBadRequest) WithPayload(payload *swagger.Error) *AnswerToMessagesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the answer to messages bad request response
func (o *AnswerToMessagesBadRequest) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AnswerToMessagesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AnswerToMessagesUnauthorizedCode is the HTTP code returned for type AnswerToMessagesUnauthorized
const AnswerToMessagesUnauthorizedCode int = 401

/*
AnswerToMessagesUnauthorized unauthorized

swagger:response answerToMessagesUnauthorized
*/
type AnswerToMessagesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewAnswerToMessagesUnauthorized creates AnswerToMessagesUnauthorized with default headers values
func NewAnswerToMessagesUnauthorized() *AnswerToMessagesUnauthorized {

	return &AnswerToMessagesUnauthorized{}
}

// WithPayload adds the payload to the answer to messages unauthorized response
func (o *AnswerToMessagesUnauthorized) WithPayload(payload *swagger.Error) *AnswerToMessagesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the answer to messages unauthorized response
func (o *AnswerToMessagesUnauthorized) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AnswerToMessagesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AnswerToMessagesInternalServerErrorCode is the HTTP code returned for type AnswerToMessagesInternalServerError
const AnswerToMessagesInternalServerErrorCode int = 500

/*
AnswerToMessagesInternalServerError Internal server error

swagger:response answerToMessagesInternalServerError
*/
type AnswerToMessagesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewAnswerToMessagesInternalServerError creates AnswerToMessagesInternalServerError with default headers values
func NewAnswerToMessagesInternalServerError() *AnswerToMessagesInternalServerError {

	return &AnswerToMessagesInternalServerError{}
}

// WithPayload adds the payload to the answer to messages internal server error response
func (o *AnswerToMessagesInternalServerError) WithPayload(payload *swagger.Error) *AnswerToMessagesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the answer to messages internal server error response
func (o *AnswerToMessagesInternalServerError) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AnswerToMessagesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
AnswerToMessagesDefault error

swagger:response answerToMessagesDefault
*/
type AnswerToMessagesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewAnswerToMessagesDefault creates AnswerToMessagesDefault with default headers values
func NewAnswerToMessagesDefault(code int) *AnswerToMessagesDefault {
	if code <= 0 {
		code = 500
	}

	return &AnswerToMessagesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the answer to messages default response
func (o *AnswerToMessagesDefault) WithStatusCode(code int) *AnswerToMessagesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the answer to messages default response
func (o *AnswerToMessagesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the answer to messages default response
func (o *AnswerToMessagesDefault) WithPayload(payload *swagger.Error) *AnswerToMessagesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the answer to messages default response
func (o *AnswerToMessagesDefault) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AnswerToMessagesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
