// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/babadro/tutor/internal/models/swagger"
)

// CreateChatOKCode is the HTTP code returned for type CreateChatOK
const CreateChatOKCode int = 200

/*
CreateChatOK Successful response

swagger:response createChatOK
*/
type CreateChatOK struct {

	/*
	  In: Body
	*/
	Payload *CreateChatOKBody `json:"body,omitempty"`
}

// NewCreateChatOK creates CreateChatOK with default headers values
func NewCreateChatOK() *CreateChatOK {

	return &CreateChatOK{}
}

// WithPayload adds the payload to the create chat o k response
func (o *CreateChatOK) WithPayload(payload *CreateChatOKBody) *CreateChatOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create chat o k response
func (o *CreateChatOK) SetPayload(payload *CreateChatOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChatOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateChatBadRequestCode is the HTTP code returned for type CreateChatBadRequest
const CreateChatBadRequestCode int = 400

/*
CreateChatBadRequest Bad request

swagger:response createChatBadRequest
*/
type CreateChatBadRequest struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewCreateChatBadRequest creates CreateChatBadRequest with default headers values
func NewCreateChatBadRequest() *CreateChatBadRequest {

	return &CreateChatBadRequest{}
}

// WithPayload adds the payload to the create chat bad request response
func (o *CreateChatBadRequest) WithPayload(payload *swagger.Error) *CreateChatBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create chat bad request response
func (o *CreateChatBadRequest) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChatBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateChatUnauthorizedCode is the HTTP code returned for type CreateChatUnauthorized
const CreateChatUnauthorizedCode int = 401

/*
CreateChatUnauthorized unauthorized

swagger:response createChatUnauthorized
*/
type CreateChatUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewCreateChatUnauthorized creates CreateChatUnauthorized with default headers values
func NewCreateChatUnauthorized() *CreateChatUnauthorized {

	return &CreateChatUnauthorized{}
}

// WithPayload adds the payload to the create chat unauthorized response
func (o *CreateChatUnauthorized) WithPayload(payload *swagger.Error) *CreateChatUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create chat unauthorized response
func (o *CreateChatUnauthorized) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChatUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateChatInternalServerErrorCode is the HTTP code returned for type CreateChatInternalServerError
const CreateChatInternalServerErrorCode int = 500

/*
CreateChatInternalServerError Internal server error

swagger:response createChatInternalServerError
*/
type CreateChatInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewCreateChatInternalServerError creates CreateChatInternalServerError with default headers values
func NewCreateChatInternalServerError() *CreateChatInternalServerError {

	return &CreateChatInternalServerError{}
}

// WithPayload adds the payload to the create chat internal server error response
func (o *CreateChatInternalServerError) WithPayload(payload *swagger.Error) *CreateChatInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create chat internal server error response
func (o *CreateChatInternalServerError) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChatInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateChatDefault error

swagger:response createChatDefault
*/
type CreateChatDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewCreateChatDefault creates CreateChatDefault with default headers values
func NewCreateChatDefault(code int) *CreateChatDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateChatDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create chat default response
func (o *CreateChatDefault) WithStatusCode(code int) *CreateChatDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create chat default response
func (o *CreateChatDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create chat default response
func (o *CreateChatDefault) WithPayload(payload *swagger.Error) *CreateChatDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create chat default response
func (o *CreateChatDefault) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateChatDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
