// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/babadro/tutor/internal/models/swagger"
)

// PostChatMessageOKCode is the HTTP code returned for type PostChatMessageOK
const PostChatMessageOKCode int = 200

/*
PostChatMessageOK Successful response

swagger:response postChatMessageOK
*/
type PostChatMessageOK struct {

	/*
	  In: Body
	*/
	Payload *PostChatMessageOKBody `json:"body,omitempty"`
}

// NewPostChatMessageOK creates PostChatMessageOK with default headers values
func NewPostChatMessageOK() *PostChatMessageOK {

	return &PostChatMessageOK{}
}

// WithPayload adds the payload to the post chat message o k response
func (o *PostChatMessageOK) WithPayload(payload *PostChatMessageOKBody) *PostChatMessageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat message o k response
func (o *PostChatMessageOK) SetPayload(payload *PostChatMessageOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatMessageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChatMessageBadRequestCode is the HTTP code returned for type PostChatMessageBadRequest
const PostChatMessageBadRequestCode int = 400

/*
PostChatMessageBadRequest Bad request

swagger:response postChatMessageBadRequest
*/
type PostChatMessageBadRequest struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewPostChatMessageBadRequest creates PostChatMessageBadRequest with default headers values
func NewPostChatMessageBadRequest() *PostChatMessageBadRequest {

	return &PostChatMessageBadRequest{}
}

// WithPayload adds the payload to the post chat message bad request response
func (o *PostChatMessageBadRequest) WithPayload(payload *swagger.Error) *PostChatMessageBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat message bad request response
func (o *PostChatMessageBadRequest) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatMessageBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChatMessageInternalServerErrorCode is the HTTP code returned for type PostChatMessageInternalServerError
const PostChatMessageInternalServerErrorCode int = 500

/*
PostChatMessageInternalServerError Internal server error

swagger:response postChatMessageInternalServerError
*/
type PostChatMessageInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewPostChatMessageInternalServerError creates PostChatMessageInternalServerError with default headers values
func NewPostChatMessageInternalServerError() *PostChatMessageInternalServerError {

	return &PostChatMessageInternalServerError{}
}

// WithPayload adds the payload to the post chat message internal server error response
func (o *PostChatMessageInternalServerError) WithPayload(payload *swagger.Error) *PostChatMessageInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat message internal server error response
func (o *PostChatMessageInternalServerError) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatMessageInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostChatMessageDefault error

swagger:response postChatMessageDefault
*/
type PostChatMessageDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewPostChatMessageDefault creates PostChatMessageDefault with default headers values
func NewPostChatMessageDefault(code int) *PostChatMessageDefault {
	if code <= 0 {
		code = 500
	}

	return &PostChatMessageDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post chat message default response
func (o *PostChatMessageDefault) WithStatusCode(code int) *PostChatMessageDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post chat message default response
func (o *PostChatMessageDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post chat message default response
func (o *PostChatMessageDefault) WithPayload(payload *swagger.Error) *PostChatMessageDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat message default response
func (o *PostChatMessageDefault) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatMessageDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
