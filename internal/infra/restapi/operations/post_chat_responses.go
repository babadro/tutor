// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/babadro/tutor/internal/models/swagger"
)

// PostChatOKCode is the HTTP code returned for type PostChatOK
const PostChatOKCode int = 200

/*
PostChatOK Successful response

swagger:response postChatOK
*/
type PostChatOK struct {

	/*
	  In: Body
	*/
	Payload *PostChatOKBody `json:"body,omitempty"`
}

// NewPostChatOK creates PostChatOK with default headers values
func NewPostChatOK() *PostChatOK {

	return &PostChatOK{}
}

// WithPayload adds the payload to the post chat o k response
func (o *PostChatOK) WithPayload(payload *PostChatOKBody) *PostChatOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat o k response
func (o *PostChatOK) SetPayload(payload *PostChatOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChatBadRequestCode is the HTTP code returned for type PostChatBadRequest
const PostChatBadRequestCode int = 400

/*
PostChatBadRequest Bad request

swagger:response postChatBadRequest
*/
type PostChatBadRequest struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewPostChatBadRequest creates PostChatBadRequest with default headers values
func NewPostChatBadRequest() *PostChatBadRequest {

	return &PostChatBadRequest{}
}

// WithPayload adds the payload to the post chat bad request response
func (o *PostChatBadRequest) WithPayload(payload *swagger.Error) *PostChatBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat bad request response
func (o *PostChatBadRequest) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChatInternalServerErrorCode is the HTTP code returned for type PostChatInternalServerError
const PostChatInternalServerErrorCode int = 500

/*
PostChatInternalServerError Internal server error

swagger:response postChatInternalServerError
*/
type PostChatInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewPostChatInternalServerError creates PostChatInternalServerError with default headers values
func NewPostChatInternalServerError() *PostChatInternalServerError {

	return &PostChatInternalServerError{}
}

// WithPayload adds the payload to the post chat internal server error response
func (o *PostChatInternalServerError) WithPayload(payload *swagger.Error) *PostChatInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat internal server error response
func (o *PostChatInternalServerError) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostChatDefault error

swagger:response postChatDefault
*/
type PostChatDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *swagger.Error `json:"body,omitempty"`
}

// NewPostChatDefault creates PostChatDefault with default headers values
func NewPostChatDefault(code int) *PostChatDefault {
	if code <= 0 {
		code = 500
	}

	return &PostChatDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post chat default response
func (o *PostChatDefault) WithStatusCode(code int) *PostChatDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post chat default response
func (o *PostChatDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post chat default response
func (o *PostChatDefault) WithPayload(payload *swagger.Error) *PostChatDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat default response
func (o *PostChatDefault) SetPayload(payload *swagger.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
